"""import aiogram; from aiogram import types; from datetime import datetime, timedelta; from main import bot, dp;



@dp.message_handler(commands=['–±–∞–Ω', 'ban'], commands_prefix='/!.')
async def ban_cmd(message: types.Message):
    try:
        member = await bot.get_chat_member(message.chat.id, message.from_user.id)
        if member.status not in {'administrator', 'creator'}:
            await message.reply(f'''–ù–µ –ø–æ–ª—É—á–∏—Ç—Å—è –¥–∞—Ç—å –±–∞–Ω, —Ç.–∫. —Ç—ã –Ω–µ –∏–º–µ–µ—à—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–∞–≤–∞.''')
            return
        elif not message.reply_to_message:
            await message.reply(f'''–ù—É–∂–Ω–æ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ.''')
            return
        admin = await bot.get_chat_member(message.chat.id, message.reply_to_message.from_user.id)
        if admin.status in {'administrator', 'creator'}:
            await message.reply(f'''–ù–µ –ø–æ–ª—É—á–∏—Ç—Å—è –¥–∞—Ç—å –±–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.''')
            return
        ban_time = int(message.text.split()[1])
        ban_type = message.text.split()[2]
        ban_reason = ' '.join(message.text.split()[3:])
    except IndexError:
        await message.reply(f'''–ü—Ä–∏–º–µ—Ä –≤–≤–æ–¥–∞: <code>/ban 4 —á–∞—Å–∞ —Å–ø–∞–º</code>''')
        return
    except ValueError:
        await message.reply(f'''–ü—Ä–∏–º–µ—Ä –≤–≤–æ–¥–∞: <code>/ban 4 —á–∞—Å–∞ —Å–ø–∞–º</code>''')
        return
    try:
        if ban_type == '–º–∏–Ω—É—Ç–∞' or ban_type == '–º–∏–Ω—É—Ç—É' or ban_type == '–º–∏–Ω—É—Ç—ã' or ban_type == '–º–∏–Ω—É—Ç':
            dnt = datetime.now() + timedelta(minutes=ban_time)
            dntt = dnt.timestamp()
            await bot.ban_chat_member(message.chat.id, message.reply_to_message.from_user.id, until_date = dntt)
            await bot.send_message(message.chat.id, f'''üî¥ <a href='tg://user?id={message.reply_to_message.from_user.id}'>{message.reply_to_message.from_user.full_name}</a> –ø–æ–ª—É—á–∏–ª(-–∞) –±–∞–Ω –Ω–∞ {ban_time} {ban_type} –ø–æ –ø—Ä–∏—á–∏–Ω–µ "{ban_reason}".''', reply_to_message_id=message.message_id)
        elif ban_type == '—á–∞—Å' or ban_type == '—á–∞—Å–∞' or ban_type == '—á–∞—Å–æ–≤':
            dnt = datetime.now() + timedelta(hours=ban_time)
            dntt = dnt.timestamp()
            await bot.ban_chat_member(message.chat.id, message.reply_to_message.from_user.id, until_date = dntt)
            await bot.send_message(message.chat.id, f'''üî¥ <a href='tg://user?id={message.reply_to_message.from_user.id}'>{message.reply_to_message.from_user.full_name}</a> –ø–æ–ª—É—á–∏–ª(-–∞) –±–∞–Ω –Ω–∞ {ban_time} {ban_type} –ø–æ –ø—Ä–∏—á–∏–Ω–µ "{ban_reason}".''', reply_to_message_id=message.message_id)
        elif ban_type == '–¥–µ–Ω—å' or ban_type == '–¥–Ω—è' or ban_type == '–¥–Ω–µ–π':
            dnt = datetime.now() + timedelta(days=ban_time)
            dntt = dnt.timestamp()
            await bot.ban_chat_member(message.chat.id, message.reply_to_message.from_user.id, until_date = dntt)
            await bot.send_message(message.chat.id, f'''üî¥ <a href='tg://user?id={message.reply_to_message.from_user.id}'>{message.reply_to_message.from_user.full_name}</a>–ø–æ–ª—É—á–∏–ª(-–∞) –±–∞–Ω –Ω–∞ {ban_time} {ban_type} –ø–æ –ø—Ä–∏—á–∏–Ω–µ "{ban_reason}".''', reply_to_message_id=message.message_id)
    except aiogram.utils.exceptions.BadRequest:
        await message.reply(f'''–ù–µ –ø–æ–ª—É—á–∏—Ç—Å—è –¥–∞—Ç—å –±–∞–Ω, —Ç.–∫. —è –Ω–µ –∏–º–µ—é —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–∞–≤–∞.''')
        return"""