from aiogram import types; from aiogram.dispatcher.filters import Command; from main import bot, dp;



@dp.message_handler(commands=['–≤—ã–µ–±–∞—Ç—å'], commands_prefix='/!.')
async def –≤—ã–µ–±–∞—Ç—å(message: types.Message):
   if not message.reply_to_message:
      await message.reply(f'''–ù—É–∂–Ω–æ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ.''')
      return
   args = ' '.join(message.text.split()[1:])
   await bot.send_message(message.chat.id, f'''üëâüëåüò¨ | {message.from_user.get_mention(as_html=True)} –≤—ã–µ–±–∞–ª(-–∞) <a href='tg://user?id={message.reply_to_message.from_user.id}'>{message.reply_to_message.from_user.full_name}</a> {args}''')

@dp.message_handler(commands=['–¥–∞—Ç—å'], commands_prefix='/!.')
async def –¥–∞—Ç—å(message: types.Message):
   if not message.reply_to_message:
      await message.reply(f'''–ù—É–∂–Ω–æ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ.''')
      return
   args = ' '.join(message.text.split()[1:])
   await bot.send_message(message.chat.id, f'''üôèüèª | {message.from_user.get_mention(as_html=True)} –¥–∞–ª(-–∞) <a href='tg://user?id={message.reply_to_message.from_user.id}'>{message.reply_to_message.from_user.full_name}</a> {args}''')

@dp.message_handler(commands=['–∏—Å–ø—É–≥–∞—Ç—å'], commands_prefix='/!.')
async def –∏—Å–ø—É–≥–∞—Ç—å(message: types.Message):
   if not message.reply_to_message:
      await message.reply(f'''–ù—É–∂–Ω–æ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ.''')
      return
   args = ' '.join(message.text.split()[1:])
   await bot.send_message(message.chat.id, f'''üò± | {message.from_user.get_mention(as_html=True)} –∏—Å–ø—É–≥–∞–ª(-–∞) <a href='tg://user?id={message.reply_to_message.from_user.id}'>{message.reply_to_message.from_user.full_name}</a> {args}''')

@dp.message_handler(commands=['–∫–∞—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å'], commands_prefix='/!.')
async def –∫–∞—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å(message: types.Message):
   if not message.reply_to_message:
      await message.reply(f'''–ù—É–∂–Ω–æ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ.''')
      return
   args = ' '.join(message.text.split()[1:])
   await bot.send_message(message.chat.id, f'''‚úÇÔ∏è | {message.from_user.get_mention(as_html=True)} –∫–∞—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª(-–∞) <a href='tg://user?id={message.reply_to_message.from_user.id}'>{message.reply_to_message.from_user.full_name}</a> {args}''')

@dp.message_handler(commands=['–ª–∏–∑–Ω—É—Ç—å'], commands_prefix='/!.')
async def –ª–∏–∑–Ω—É—Ç—å(message: types.Message):
   if not message.reply_to_message:
      await message.reply(f'''–ù—É–∂–Ω–æ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ.''')
      return
   args = ' '.join(message.text.split()[1:])
   await bot.send_message(message.chat.id, f'''üëÖ | {message.from_user.get_mention(as_html=True)} –ª–∏–∑–Ω—É–ª(-–∞) <a href='tg://user?id={message.reply_to_message.from_user.id}'>{message.reply_to_message.from_user.full_name}</a> {args}''')

@dp.message_handler(commands=['–æ–±–Ω—è—Ç—å'], commands_prefix='/!.')
async def –æ–±–Ω—è—Ç—å(message: types.Message):
   if not message.reply_to_message:
      await message.reply(f'''–ù—É–∂–Ω–æ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ.''')
      return
   args = ' '.join(message.text.split()[1:])
   await bot.send_message(message.chat.id, f'''ü§ó | {message.from_user.get_mention(as_html=True)} –æ–±–Ω—è–ª(-–∞) <a href='tg://user?id={message.reply_to_message.from_user.id}'>{message.reply_to_message.from_user.full_name}</a> {args}''')

@dp.message_handler(commands=['–æ—Ç–¥–∞—Ç—å—Å—è'], commands_prefix='/!.')
async def –æ—Ç–¥–∞—Ç—å—Å—è(message: types.Message):
   if not message.reply_to_message:
      await message.reply(f'''–ù—É–∂–Ω–æ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ.''')
      return
   args = ' '.join(message.text.split()[1:])
   await bot.send_message(message.chat.id, f'''üíù | {message.from_user.get_mention(as_html=True)} –æ—Ç–¥–∞–ª—Å—è(-–∞—Å—å) <a href='tg://user?id={message.reply_to_message.from_user.id}'>{message.reply_to_message.from_user.full_name}</a> {args}''')

@dp.message_handler(commands=['–æ—Ç–ª–∏–∑–∞—Ç—å'], commands_prefix='/!.')
async def –æ—Ç–ª–∏–∑–∞—Ç—å(message: types.Message):
   if not message.reply_to_message:
      await message.reply(f'''–ù—É–∂–Ω–æ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ.''')
      return
   args = ' '.join(message.text.split()[1:])
   await bot.send_message(message.chat.id, f'''üëÖ | {message.from_user.get_mention(as_html=True)} –æ—Ç–ª–∏–∑–∞–ª(-–∞) —É <a href='tg://user?id={message.reply_to_message.from_user.id}'>{message.reply_to_message.from_user.full_name}</a> {args}''')

@dp.message_handler(commands=['–æ—Ç—Ä–∞–≤–∏—Ç—å'], commands_prefix='/!.')
async def –æ—Ç—Ä–∞–≤–∏—Ç—å(message: types.Message):
   if not message.reply_to_message:
      await message.reply(f'''–ù—É–∂–Ω–æ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ.''')
      return
   args = ' '.join(message.text.split()[1:])
   await bot.send_message(message.chat.id, f'''üíä | {message.from_user.get_mention(as_html=True)} –æ—Ç—Ä–∞–≤–∏–ª(-–∞) <a href='tg://user?id={message.reply_to_message.from_user.id}'>{message.reply_to_message.from_user.full_name}</a> {args}''')

@dp.message_handler(commands=['–æ—Ç—Å–æ—Å–∞—Ç—å'], commands_prefix='/!.')
async def –æ—Ç—Å–æ—Å–∞—Ç—å(message: types.Message):
   if not message.reply_to_message:
      await message.reply(f'''–ù—É–∂–Ω–æ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ.''')
      return
   args = ' '.join(message.text.split()[1:])
   await bot.send_message(message.chat.id, f'''ü•≥ | {message.from_user.get_mention(as_html=True)} –æ—Ç—Å–æ—Å–∞–ª(-–∞) —É <a href='tg://user?id={message.reply_to_message.from_user.id}'>{message.reply_to_message.from_user.full_name}</a> {args}''')

@dp.message_handler(commands=['–ø–æ–∫–æ—Ä–º–∏—Ç—å'], commands_prefix='/!.')
async def –ø–æ–∫–æ—Ä–º–∏—Ç—å(message: types.Message):
   if not message.reply_to_message:
      await message.reply(f'''–ù—É–∂–Ω–æ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ.''')
      return
   args = ' '.join(message.text.split()[1:])
   await bot.send_message(message.chat.id, f'''üçï | {message.from_user.get_mention(as_html=True)} –ø–æ–∫–æ—Ä–º–∏–ª(-–∞) <a href='tg://user?id={message.reply_to_message.from_user.id}'>{message.reply_to_message.from_user.full_name}</a> {args}''')

@dp.message_handler(commands=['–ø–æ—Å–ª–∞—Ç—å'], commands_prefix='/!.')
async def –ø–æ—Å–ª–∞—Ç—å(message: types.Message):
   if not message.reply_to_message:
      await message.reply(f'''–ù—É–∂–Ω–æ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ.''')
      return
   args = ' '.join(message.text.split()[1:])
   await bot.send_message(message.chat.id, f'''üñï | {message.from_user.get_mention(as_html=True)} –ø–æ—Å–ª–∞–ª(-–∞) <a href='tg://user?id={message.reply_to_message.from_user.id}'>{message.reply_to_message.from_user.full_name}</a> {args}''')

@dp.message_handler(commands=['–ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å'], commands_prefix='/!.')
async def –ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å(message: types.Message):
   if not message.reply_to_message:
      await message.reply(f'''–ù—É–∂–Ω–æ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ.''')
      return
   args = ' '.join(message.text.split()[1:])
   await bot.send_message(message.chat.id, f'''üòò | {message.from_user.get_mention(as_html=True)} –ø–æ—Ü–µ–ª–æ–≤–∞–ª(-–∞) <a href='tg://user?id={message.reply_to_message.from_user.id}'>{message.reply_to_message.from_user.full_name}</a> {args}''')

@dp.message_handler(commands=['–ø—Ä–∏–∂–∞—Ç—å'], commands_prefix='/!.')
async def –ø—Ä–∏–∂–∞—Ç—å(message: types.Message):
   if not message.reply_to_message:
      await message.reply(f'''–ù—É–∂–Ω–æ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ.''')
      return
   args = ' '.join(message.text.split()[1:])
   await bot.send_message(message.chat.id, f'''ü§≤ | {message.from_user.get_mention(as_html=True)} –ø—Ä–∏–∂–∞–ª(-–∞) <a href='tg://user?id={message.reply_to_message.from_user.id}'>{message.reply_to_message.from_user.full_name}</a> {args}''')

@dp.message_handler(commands=['—Å–∂–µ—á—å'], commands_prefix='/!.')
async def —Å–∂–µ—á—å(message: types.Message):
   if not message.reply_to_message:
      await message.reply(f'''–ù—É–∂–Ω–æ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ.''')
      return
   args = ' '.join(message.text.split()[1:])
   await bot.send_message(message.chat.id, f'''üî• | {message.from_user.get_mention(as_html=True)} —Å–∂—ë–≥(-–æ–∂–≥–ª–∞) <a href='tg://user?id={message.reply_to_message.from_user.id}'>{message.reply_to_message.from_user.full_name}</a> {args}''')

@dp.message_handler(commands=['—Ç—Ä–∞—Ö–Ω—É—Ç—å'], commands_prefix='/!.')
async def —Ç—Ä–∞—Ö–Ω—É—Ç—å(message: types.Message):
   if not message.reply_to_message:
      await message.reply(f'''–ù—É–∂–Ω–æ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ.''')
      return
   args = ' '.join(message.text.split()[1:])
   await bot.send_message(message.chat.id, f'''üëâüëå | {message.from_user.get_mention(as_html=True)} —Ç—Ä–∞—Ö–Ω—É–ª(-–∞) <a href='tg://user?id={message.reply_to_message.from_user.id}'>{message.reply_to_message.from_user.full_name}</a> {args}''')

@dp.message_handler(commands=['—É–±–∏—Ç—å'], commands_prefix='/!.')
async def —É–±–∏—Ç—å(message: types.Message):
   if not message.reply_to_message:
      await message.reply(f'''–ù—É–∂–Ω–æ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ.''')
      return
   args = ' '.join(message.text.split()[1:])
   await bot.send_message(message.chat.id, f'''ü§°üî™ | {message.from_user.get_mention(as_html=True)} —É–±–∏–ª(-–∞) <a href='tg://user?id={message.reply_to_message.from_user.id}'>{message.reply_to_message.from_user.full_name}</a> {args}''')

@dp.message_handler(commands=['do'], commands_prefix='/!.')
async def do_cmd(message: types.Message, command: Command):
   if not command.args:
      await message.reply(f'''–ü—Ä–∏–º–µ—Ä –≤–≤–æ–¥–∞: <code>!do –¶–≤–µ—Ç—ã –ø–æ–ª–∏—Ç—ã</code>''')
      return
   await bot.send_message(message.chat.id, f'''{command.args}. (<b>{message.from_user.full_name}</b>)''')
   await message.delete()

@dp.message_handler(commands=['me'], commands_prefix='/!.')
async def me_cmd(message: types.Message, command: Command):
   if not command.args:
      await message.reply(f'''–ü—Ä–∏–º–µ—Ä –≤–≤–æ–¥–∞: <code>!me –ø–æ–ª–∏–ª(-–∞) —Ü–≤–µ—Ç—ã</code>''')
      return
   if command.args:
      await bot.send_message(message.chat.id, f'''<b>{message.from_user.full_name}</b> {command.args}.''')
      await message.delete()