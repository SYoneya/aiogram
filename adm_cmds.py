import aiogram; from aiogram import types; from aiogram.dispatcher.filters import Command; from datetime import datetime, timedelta; from main import bot, dp;



@dp.message_handler(commands=['–º—É—Ç', 'mute'], commands_prefix='/!.')
async def mute_cmd(message: types.Message):
    try:
        member = await bot.get_chat_member(message.chat.id, message.from_id)
        if member.status not in {'administrator', 'creator'}:
            await message.reply(f'''–¢—ã –Ω–µ –º–æ–∂–µ—à—å –¥–∞—Ç—å –º—É—Ç, —Ç–∞–∫ –∫–∞–∫ –Ω–µ –∏–º–µ–µ—à—å –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.''')
            return
        elif not message.reply_to_message:
            await message.reply(f'''–ù—É–∂–Ω–æ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ.''')
            return
        admin = await bot.get_chat_member(message.chat.id, message.reply_to_message.from_user.id)
        if admin.status in {'administrator', 'creator'}:
            await message.reply(f'''–¢—ã –Ω–µ –º–æ–∂–µ—à—å –¥–∞—Ç—å –º—É—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.''')
            return
        mute_time = int(message.text.split()[1])
        mute_type = message.text.split()[2]
        mute_reason = ' '.join(message.text.split()[3:])
    except IndexError:
        await message.reply(f'''–ü—Ä–∏–º–µ—Ä –≤–≤–æ–¥–∞: <code>/mute 10 –º–∏–Ω—É—Ç —Ñ–ª—É–¥</code>''')
        return
    except ValueError:
        await message.reply(f'''–ü—Ä–∏–º–µ—Ä –≤–≤–æ–¥–∞: <code>/mute 10 –º–∏–Ω—É—Ç —Ñ–ª—É–¥</code>''')
        return
    if mute_type == mute_type == '–º–∏–Ω—É—Ç–∞' or mute_type == '–º–∏–Ω—É—Ç—É' or mute_type == '–º–∏–Ω—É—Ç—ã' or mute_type == '–º–∏–Ω—É—Ç':
        dnt = datetime.now() + timedelta(minutes=mute_time)
        dntt = dnt.timestamp()
        await bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, types.ChatPermissions(False), until_date = dntt)
        await bot.send_message(message.chat.id, f'''üîá <a href='tg://user?id={message.reply_to_message.from_user.id}'>{message.reply_to_message.from_user.full_name}</a> –ø–æ–ª—É—á–∏–ª(-–∞) –º—É—Ç –Ω–∞ {mute_time} {mute_type} –ø–æ –ø—Ä–∏—á–∏–Ω–µ "{mute_reason}".''', reply_to_message_id=message.message_id)
    elif mute_type == '—á–∞—Å' or mute_type == '—á–∞—Å–∞' or mute_type == '—á–∞—Å–æ–≤':
        dnt = datetime.now() + timedelta(hours=mute_time)
        dntt = dnt.timestamp()
        await bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, types.ChatPermissions(False), until_date = dntt)
        await bot.send_message(message.chat.id, f'''üîá <a href='tg://user?id={message.reply_to_message.from_user.id}'>{message.reply_to_message.from_user.full_name}</a> –ø–æ–ª—É—á–∏–ª(-–∞) –º—É—Ç –Ω–∞ {mute_time} {mute_type} –ø–æ –ø—Ä–∏—á–∏–Ω–µ "{mute_reason}".''', reply_to_message_id=message.message_id)
    elif mute_type == '–¥–µ–Ω—å' or mute_type == '–¥–Ω—è' or mute_type == '–¥–Ω–µ–π':
        dnt = datetime.now() + timedelta(days=mute_time)
        dntt = dnt.timestamp()
        await bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, types.ChatPermissions(False), until_date = dntt)
        await bot.send_message(message.chat.id, f'''üîá <a href='tg://user?id={message.reply_to_message.from_user.id}'>{message.reply_to_message.from_user.full_name}</a> –ø–æ–ª—É—á–∏–ª(-–∞) –º—É—Ç –Ω–∞ {mute_time} {mute_type} –ø–æ –ø—Ä–∏—á–∏–Ω–µ "{mute_reason}".''', reply_to_message_id=message.message_id)

@dp.message_handler(commands=['–±–∞–Ω', 'ban'], commands_prefix='/!.')
async def ban_cmd(message: types.Message):
    try:
        member = await bot.get_chat_member(message.chat.id, message.from_id)
        if member.status not in {'administrator', 'creator'}:
            await message.reply(f'''–¢—ã –Ω–µ –º–æ–∂–µ—à—å –¥–∞—Ç—å –±–∞–Ω, —Ç–∞–∫ –∫–∞–∫ –Ω–µ –∏–º–µ–µ—à—å –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.''')
            return
        elif not message.reply_to_message:
            await message.reply(f'''–ù—É–∂–Ω–æ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ.''')
            return
        admin = await bot.get_chat_member(message.chat.id, message.reply_to_message.from_user.id)
        if admin.status in {'administrator', 'creator'}:
            await message.reply(f'''–¢—ã –Ω–µ –º–æ–∂–µ—à—å –¥–∞—Ç—å –±–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.''')
            return
        ban_time = int(message.text.split()[1])
        ban_type = message.text.split()[2]
        ban_reason = ' '.join(message.text.split()[3:])
    except IndexError:
        await message.reply(f'''–ü—Ä–∏–º–µ—Ä –≤–≤–æ–¥–∞: <code>/ban 4 —á–∞—Å–∞ —Å–ø–∞–º</code>''')
        return
    except ValueError:
        await message.reply(f'''–ü—Ä–∏–º–µ—Ä –≤–≤–æ–¥–∞: <code>/ban 4 —á–∞—Å–∞ —Å–ø–∞–º</code>''')
        return
    if ban_type == '–º–∏–Ω—É—Ç–∞' or ban_type == '–º–∏–Ω—É—Ç—É' or ban_type == '–º–∏–Ω—É—Ç—ã' or ban_type == '–º–∏–Ω—É—Ç':
        dnt = datetime.now() + timedelta(minutes=ban_time)
        dntt = dnt.timestamp()
        await bot.ban_chat_member(message.chat.id, message.reply_to_message.from_user.id, until_date = dntt)
        await bot.send_message(message.chat.id, f'''üî¥ <a href='tg://user?id={message.reply_to_message.from_user.id}'>{message.reply_to_message.from_user.full_name}</a> –ø–æ–ª—É—á–∏–ª(-–∞) –±–∞–Ω –Ω–∞ {ban_time} {ban_type} –ø–æ –ø—Ä–∏—á–∏–Ω–µ "{ban_reason}".''', reply_to_message_id=message.message_id)
    elif ban_type == '—á–∞—Å' or ban_type == '—á–∞—Å–∞' or ban_type == '—á–∞—Å–æ–≤':
        dnt = datetime.now() + timedelta(hours=ban_time)
        dntt = dnt.timestamp()
        await bot.ban_chat_member(message.chat.id, message.reply_to_message.from_user.id, until_date = dntt)
        await bot.send_message(message.chat.id, f'''üî¥ <a href='tg://user?id={message.reply_to_message.from_user.id}'>{message.reply_to_message.from_user.full_name}</a> –ø–æ–ª—É—á–∏–ª(-–∞) –±–∞–Ω –Ω–∞ {ban_time} {ban_type} –ø–æ –ø—Ä–∏—á–∏–Ω–µ "{ban_reason}".''', reply_to_message_id=message.message_id)
    elif ban_type == '–¥–µ–Ω—å' or ban_type == '–¥–Ω—è' or ban_type == '–¥–Ω–µ–π':
        dnt = datetime.now() + timedelta(days=ban_time)
        dntt = dnt.timestamp()
        await bot.ban_chat_member(message.chat.id, message.reply_to_message.from_user.id, until_date = dntt)
        await bot.send_message(message.chat.id, f'''üî¥ <a href='tg://user?id={message.reply_to_message.from_user.id}'>{message.reply_to_message.from_user.full_name}</a>–ø–æ–ª—É—á–∏–ª(-–∞) –±–∞–Ω –Ω–∞ {ban_time} {ban_type} –ø–æ –ø—Ä–∏—á–∏–Ω–µ "{ban_reason}".''', reply_to_message_id=message.message_id)



@dp.message_handler(commands=['—Ä–∞–∑–º—É—Ç', 'unmute'], commands_prefix='/!.')
async def unmute_cmd(message: types.Message):
   member = await bot.get_chat_member(message.chat.id, message.from_user.id)
   if member.status not in {'administrator', 'creator'}:
      await message.reply(f'''–¢—ã –Ω–µ –º–æ–∂–µ—à—å –¥–∞—Ç—å —Ä–∞–∑–º—É—Ç, —Ç–∞–∫ –∫–∞–∫ –Ω–µ –∏–º–µ–µ—à—å –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.''')
      return
   elif not message.reply_to_message:
      await message.reply(f'''–ù—É–∂–Ω–æ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ.''')
      return
   admin = await bot.get_chat_member(message.chat.id, message.reply_to_message.from_user.id)
   if admin.status in {'administrator', 'creator'}:
      await message.reply(f'''–¢—ã –Ω–µ –º–æ–∂–µ—à—å –¥–∞—Ç—å —Ä–∞–∑–º—É—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.''')
      return
   await bot.restrict_chat_member(message.chat.id, message.reply_to_message.from_user.id, can_send_messages=True, can_send_other_messages=True)
   await bot.send_message(message.chat.id, f'''üîä <a href='tg://user?id={message.reply_to_message.from_user.id}'>{message.reply_to_message.from_user.full_name}</a> –±–æ–ª—å—à–µ –Ω–µ –≤ –º—É—Ç–µ.''', reply_to_message_id=message.message_id)

@dp.message_handler(commands=['—Ä–∞–∑–±–∞–Ω', 'unban'], commands_prefix='/!.')
async def unban_cmd(message: types.Message):
   member = await bot.get_chat_member(message.chat.id, message.from_user.id)
   if member.status not in {'administrator', 'creator'}:
      await message.reply(f'''–¢—ã –Ω–µ –º–æ–∂–µ—à—å –¥–∞—Ç—å —Ä–∞–∑–±–∞–Ω, —Ç–∞–∫ –∫–∞–∫ –Ω–µ –∏–º–µ–µ—à—å –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.''')
      return
   elif not message.reply_to_message:
      await message.reply(f'''–ù—É–∂–Ω–æ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ.''')
      return
   admin = await bot.get_chat_member(message.chat.id, message.reply_to_message.from_user.id)
   if admin.status in {'administrator', 'creator'}:
      await message.reply(f'''–¢—ã –Ω–µ –º–æ–∂–µ—à—å –¥–∞—Ç—å —Ä–∞–∑–±–∞–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.''')
      return
   await bot.unban_chat_member(message.chat.id, message.reply_to_message.from_user.id)
   await bot.send_message(message.chat.id, f'''‚úÖ <a href='tg://user?id={message.reply_to_message.from_user.id}'>{message.reply_to_message.from_user.full_name}</a> –±–æ–ª—å—à–µ –Ω–µ –≤ –±–∞–Ω–µ.''', reply_to_message_id=message.message_id)



@dp.message_handler(commands=['–∞–¥–º–∏–Ω—ã', '–∫—Ç–æ –∞–¥–º–∏–Ω', 'admins'], commands_prefix='/!.')
async def admins_cmd(message: types.Message):
   try:
      chat_admins = await bot.get_chat_administrators(message.chat.id)
      lst = [f'''"id": "{admin.user.id}",
"full_name": "{admin.user.full_name}",
"username": "{admin.user.username}"''' for admin in chat_admins]
      await message.reply('\n\n'.join(lst))
   except aiogram.utils.exceptions.BadRequest:
      await message.reply(f'''–ù—É–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤ —á–∞—Ç–µ.''')
        


@dp.message_handler(commands=['–ø–∏–Ω', 'pin'], commands_prefix='/!.')
async def pin_cmd(message: types.Message):
   member = await bot.get_chat_member(message.chat.id, message.from_user.id)
   if member.status not in {'administrator', 'creator'}:
      await message.reply(f'''–¢—ã –Ω–µ –º–æ–∂–µ—à—å –∑–∞–∫—Ä–µ–ø–∏—Ç—å, —Ç–∞–∫ –∫–∞–∫ –Ω–µ –∏–º–µ–µ—à—å –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.''')
      return
   elif not message.reply_to_message:
      await message.reply(f'''–ù—É–∂–Ω–æ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ.''')
      return
   await bot.pin_chat_message(message.chat.id, message.reply_to_message.message_id)
   await message.reply(f'''üìå –°–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–æ.''')

@dp.message_handler(commands=['—Ä–∞–∑–ø–∏–Ω', 'unpin'], commands_prefix='/!.')
async def unpin_cmd(message: types.Message, command: Command):
   member = await bot.get_chat_member(message.chat.id, message.from_user.id)
   if member.status not in {'administrator', 'creator'}:
      await message.reply(f'''–¢—ã –Ω–µ –º–æ–∂–µ—à—å –æ—Ç–∫—Ä–µ–ø–∏—Ç—å, —Ç–∞–∫ –∫–∞–∫ –Ω–µ –∏–º–µ–µ—à—å –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.''')
      return
   elif command.args.lower() == '–≤—Å–µ':
      await bot.unpin_all_chat_messages(message.chat.id)
      await message.reply(f'''üìå –í—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç–∫—Ä–µ–ø–ª–µ–Ω—ã.''')
      return
   elif not message.reply_to_message:
      await message.reply(f'''–ù—É–∂–Ω–æ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ.''')
      return
   await bot.unpin_chat_message(message.chat.id, message.reply_to_message.message_id)
   await message.reply(f'''üìå –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–∫—Ä–µ–ø–ª–µ–Ω–æ.''')



@dp.message_handler(commands=['–ø–æ–≤—ã—Å–∏—Ç—å', 'promote'], commands_prefix='/!.')
async def promote_cmd(message: types.Message, command: Command):
   member = await bot.get_chat_member(message.chat.id, message.from_user.id)
   if member.status not in {'administrator', 'creator'}:
      await message.reply(f'''–¢—ã –Ω–µ –º–æ–∂–µ—à—å –ø–æ–≤—ã—Å–∏—Ç—å, —Ç–∞–∫ –∫–∞–∫ –Ω–µ –∏–º–µ–µ—à—å –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.''')
      return
   elif not message.reply_to_message:
      await message.reply(f'''–ù—É–∂–Ω–æ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ.''')
      return
   elif command.args.lower() == '–≤—Å–µ':
      await bot.promote_chat_member(message.chat.id, message.reply_to_message.from_user.id, can_manage_chat=True)
      return
   elif command.args.lower() == '+—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–∞—Ç–æ–º':
      await bot.promote_chat_member(message.chat.id, message.reply_to_message.from_user.id, can_manage_chat=True)
   
@dp.message_handler(commands=['–ø–æ–Ω–∏–∑–∏—Ç—å', 'demote'], commands_prefix='/!.')
async def demote_cmd(message: types.Message, command: Command):
   member = await bot.get_chat_member(message.chat.id, message.from_user.id)
   if member.status not in {'administrator', 'creator'}:
      await message.reply(f'''–¢—ã –Ω–µ –º–æ–∂–µ—à—å –ø–æ–Ω–∏–∑–∏—Ç—å, —Ç–∞–∫ –∫–∞–∫ –Ω–µ –∏–º–µ–µ—à—å –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.''')
      return
   elif not message.reply_to_message:
      await message.reply(f'''–ù—É–∂–Ω–æ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ.''')
      return
   elif command.args.lower() == '–≤—Å–µ':
      await bot.promote_chat_member(message.chat.id, message.reply_to_message.from_user.id, can_manage_chat=False)
      return
   elif command.args.lower() == '-—É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–∞—Ç–æ–º':
      await bot.promote_chat_member(message.chat.id, message.reply_to_message.from_user.id, can_manage_chat=False)